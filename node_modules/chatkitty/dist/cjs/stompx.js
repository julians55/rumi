"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var rx_stomp_1 = require("@stomp/rx-stomp");
var stompjs_1 = require("@stomp/stompjs");
var axios_1 = __importDefault(require("axios"));
var operators_1 = require("rxjs/operators");
var uuid_1 = require("uuid");
var version_1 = require("./environment/version");
var TransportFallback;
Promise.resolve().then(function () { return __importStar(require('sockjs-client')); }).then(function (sockjs) {
    TransportFallback = sockjs;
})
    .catch(function (error) {
    ErrorMessageTransportFallback.errorMessage = error.message;
    TransportFallback = { default: ErrorMessageTransportFallback };
});
var ErrorMessageTransportFallback = /** @class */ (function () {
    function ErrorMessageTransportFallback() {
        throw new Error('Encountered error when attempting to use transport fallback: ' +
            ErrorMessageTransportFallback.errorMessage);
    }
    return ErrorMessageTransportFallback;
}());
var StompX = /** @class */ (function () {
    function StompX(configuration) {
        this.topics = new Map();
        this.pendingActions = new Map();
        this.pendingRelayErrors = new Map();
        this.pendingActionErrors = new Map();
        this.eventHandlers = new Map();
        this.rxStomp = new rx_stomp_1.RxStomp();
        this.initialized = false;
        this.host = configuration.host;
        if (configuration.isSecure) {
            this.wsScheme = 'wss';
            this.httpScheme = 'https';
        }
        else {
            this.wsScheme = 'ws';
            this.httpScheme = 'http';
        }
        this.rxStompConfig = {
            stompVersions: new stompjs_1.Versions(['1.2']),
            connectionTimeout: 60000,
            heartbeatIncoming: 10000,
            heartbeatOutgoing: 60000,
            debug: function (message) {
                if (configuration.isDebug) {
                    console.log('StompX Debug:\n' + message);
                }
            },
        };
        if (typeof navigator != 'undefined' && navigator.product == 'ReactNative') {
            this.rxStompConfig.forceBinaryWSFrames = true;
            this.rxStompConfig.appendMissingNULLonIncoming = true;
        }
        this.axios = axios_1.default.create({
            baseURL: this.httpScheme + '://' + this.host,
        });
    }
    StompX.prototype.connect = function (request) {
        var _this = this;
        var host = this.host;
        var connectHeaders = {
            'StompX-User': request.username,
            'StompX-User-Agent': "ChatKitty-JS/" + version_1.version,
        };
        if (request.authParams) {
            connectHeaders['StompX-Auth-Params'] = btoa(JSON.stringify(request.authParams));
        }
        if (typeof WebSocket === 'function') {
            this.rxStompConfig.brokerURL = this.wsScheme + "://" + host + "/rtm/websocket?api-key=" + encodeURIComponent(request.apiKey);
        }
        else {
            this.rxStompConfig.webSocketFactory = function () {
                return new TransportFallback.default(_this.httpScheme + "://" + host + "/rtm?api-key=" + encodeURIComponent(request.apiKey));
            };
        }
        this.rxStomp.configure(__assign(__assign({}, this.rxStompConfig), { connectHeaders: connectHeaders }));
        this.rxStomp.serverHeaders$.subscribe(function (headers) {
            _this.rxStomp.configure(__assign(__assign({}, _this.rxStompConfig), { connectHeaders: __assign(__assign({}, connectHeaders), { 'StompX-Auth-Session-ID': headers['session'] }) }));
        });
        this.rxStomp.connected$.subscribe(function () {
            _this.relayResource({
                destination: '/application/v1/user.relay',
                onSuccess: function (user) {
                    if (_this.initialized) {
                        request.onConnected(user);
                    }
                    else {
                        _this.rxStomp
                            .watch('/user/queue/v1/errors', {
                            id: StompX.generateSubscriptionId(),
                        })
                            .subscribe(function (message) {
                            var error = JSON.parse(message.body);
                            var subscription = message.headers['subscription-id'];
                            var receipt = message.headers['receipt-id'];
                            if (subscription) {
                                var handler = _this.pendingRelayErrors.get(subscription);
                                if (handler) {
                                    handler(error);
                                    _this.pendingRelayErrors.delete(subscription);
                                }
                            }
                            if (receipt) {
                                var handler = _this.pendingActionErrors.get(receipt);
                                if (handler) {
                                    handler(error);
                                    _this.pendingActionErrors.delete(receipt);
                                }
                            }
                            if (!subscription && !receipt) {
                                _this.pendingActionErrors.forEach(function (handler) {
                                    handler(error);
                                });
                                _this.pendingActionErrors.clear();
                            }
                        });
                        _this.relayResource({
                            destination: '/application/v1/user.write_file_access_grant.relay',
                            onSuccess: function (write) {
                                _this.relayResource({
                                    destination: '/application/v1/user.read_file_access_grant.relay',
                                    onSuccess: function (read) {
                                        request.onSuccess(user, write.grant, read.grant);
                                        request.onConnected(user);
                                        _this.initialized = true;
                                    },
                                });
                            },
                        });
                    }
                },
            });
        });
        this.rxStomp.connectionState$.subscribe(function (state) {
            if (state == rx_stomp_1.RxStompState.CLOSED) {
                request.onConnectionLost();
            }
            if (state == rx_stomp_1.RxStompState.OPEN) {
                request.onConnectionResumed();
            }
        });
        this.rxStomp.stompErrors$.subscribe(function (frame) {
            var error;
            try {
                error = JSON.parse(frame.body);
            }
            catch (e) {
                error = {
                    error: 'UnknownChatKittyError',
                    message: 'An unknown error occurred.',
                    timestamp: new Date().toISOString(),
                };
            }
            if (error.error == 'AccessDeniedError') {
                var onResult = function () { return request.onError(error); };
                _this.disconnect({ onSuccess: onResult, onError: onResult });
            }
            else {
                request.onError(error);
            }
        });
        this.rxStomp.webSocketErrors$.subscribe(function (error) {
            console.error(error);
            request.onError({
                error: 'ChatKittyConnectionError',
                message: 'Could not connect to ChatKitty',
                timestamp: new Date().toISOString(),
            });
        });
        this.rxStomp.activate();
    };
    StompX.prototype.relayResource = function (request) {
        var _this = this;
        this.guardConnected(function () {
            var subscriptionId = StompX.generateSubscriptionId();
            if (request.onError) {
                _this.pendingRelayErrors.set(subscriptionId, request.onError);
            }
            _this.rxStomp.stompClient.subscribe(request.destination, function (message) {
                request.onSuccess(JSON.parse(message.body).resource);
            }, __assign(__assign({}, request.parameters), { id: subscriptionId }));
        });
    };
    StompX.prototype.listenToTopic = function (request) {
        var _this = this;
        var unsubscribe = function () {
            // Do nothing
        };
        this.guardConnected(function () {
            var subscriptionReceipt = StompX.generateReceipt();
            var onSuccess = request.onSuccess;
            if (onSuccess) {
                _this.rxStomp.watchForReceipt(subscriptionReceipt, function () {
                    onSuccess();
                });
            }
            var subscription = _this.rxStomp
                .watch(request.topic, {
                id: StompX.generateSubscriptionId(),
                receipt: subscriptionReceipt,
                ack: 'client-individual',
            })
                .subscribe(function (message) {
                var event = JSON.parse(message.body);
                var receipt = message.headers['receipt-id'];
                if (receipt) {
                    var action = _this.pendingActions.get(receipt);
                    if (action && (!action.types || action.types.find(function (type) { return type === event.type; }))) {
                        action.action(event.resource);
                        _this.pendingActions.delete(receipt);
                    }
                }
                var handlers = _this.eventHandlers.get(request.topic);
                if (handlers) {
                    handlers.forEach(function (handler) {
                        if (handler.event === event.type) {
                            handler.onSuccess(event.resource);
                        }
                    });
                }
                message.ack();
            });
            _this.topics.set(request.topic, subscription);
            unsubscribe = function () {
                subscription.unsubscribe();
                _this.topics.delete(request.topic);
            };
        });
        return function () { return unsubscribe(); };
    };
    StompX.prototype.listenForEvent = function (request) {
        var handlers = this.eventHandlers.get(request.topic);
        if (handlers === undefined) {
            handlers = new Set();
        }
        var handler = {
            event: request.event,
            onSuccess: request.onSuccess,
        };
        handlers.add(handler);
        this.eventHandlers.set(request.topic, handlers);
        return function () {
            if (handlers) {
                handlers.delete(handler);
            }
        };
    };
    StompX.prototype.sendAction = function (request) {
        var _this = this;
        this.guardConnected(function () {
            var receipt = StompX.generateReceipt();
            if (request.onSent) {
                _this.rxStomp.watchForReceipt(receipt, request.onSent);
            }
            if (request.onSuccess) {
                _this.pendingActions.set(receipt, {
                    types: request.events,
                    action: request.onSuccess
                });
            }
            if (request.onError) {
                _this.pendingActionErrors.set(receipt, request.onError);
            }
            _this.rxStomp.publish({
                destination: request.destination,
                headers: {
                    'content-type': 'application/json;charset=UTF-8',
                    receipt: receipt,
                },
                body: JSON.stringify(request.body),
            });
        });
    };
    StompX.prototype.sendToStream = function (request) {
        var _a, _b, _c;
        var data = new FormData();
        var file = request.file;
        if (!(file instanceof File)) {
            file = StompX.dataUriToFile(file.uri, file.name);
        }
        data.append('file', file);
        (_a = request.properties) === null || _a === void 0 ? void 0 : _a.forEach(function (value, key) {
            data.append(key, JSON.stringify(value));
        });
        (_c = (_b = request.progressListener) === null || _b === void 0 ? void 0 : _b.onStarted) === null || _c === void 0 ? void 0 : _c.call(_b);
        this.axios({
            method: 'post',
            url: request.stream,
            data: data,
            headers: { 'Content-Type': 'multipart/form-data', Grant: request.grant },
            onUploadProgress: function (progressEvent) {
                var _a, _b;
                (_b = (_a = request.progressListener) === null || _a === void 0 ? void 0 : _a.onProgress) === null || _b === void 0 ? void 0 : _b.call(_a, progressEvent.loaded / progressEvent.total);
            },
        })
            .then(function (response) {
            var _a, _b, _c;
            (_b = (_a = request.progressListener) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a);
            (_c = request.onSuccess) === null || _c === void 0 ? void 0 : _c.call(request, response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            (_b = (_a = request.progressListener) === null || _a === void 0 ? void 0 : _a.onFailed) === null || _b === void 0 ? void 0 : _b.call(_a);
            (_c = request.onError) === null || _c === void 0 ? void 0 : _c.call(request, error);
        });
    };
    StompX.prototype.disconnect = function (request) {
        this.initialized = false;
        this.rxStomp.deactivate().then(request.onSuccess).catch(request.onError);
        this.rxStomp = new rx_stomp_1.RxStomp();
    };
    StompX.prototype.guardConnected = function (action) {
        this.rxStomp.connected$.pipe((0, operators_1.take)(1)).subscribe(function () {
            action();
        });
    };
    StompX.dataUriToFile = function (url, name) {
        var _a;
        var arr = url.split(','), mime = (_a = arr[0].match(/:(.*?);/)) === null || _a === void 0 ? void 0 : _a[1], bstr = atob(arr[1]);
        var n = bstr.length;
        var u8arr = new Uint8Array(n);
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        }
        return new File([u8arr], name, { type: mime });
    };
    StompX.generateSubscriptionId = function () {
        return 'subscription-id-' + (0, uuid_1.v4)();
    };
    StompX.generateReceipt = function () {
        return 'receipt-' + (0, uuid_1.v4)();
    };
    return StompX;
}());
exports.default = StompX;
//# sourceMappingURL=data:application/json;base64,